openapi: 3.0.3
info:
  title: Ad Bidding Service API
  description: API for managing ad line items and serving winning ads based on various criteria
  version: 1.0.0
  contact:
    name: Your Company
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Verifies the service is running correctly
      operationId: getHealth
      responses:
        200:
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  version:
                    type: string
                    example: "1.0.0"
        500:
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/lineitems:
    post:
      summary: Create a new line item
      description: Creates a new ad line item with bidding parameters
      operationId: createLineItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineItemCreate'
      responses:
        201:
          description: Line item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItem'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get all line items
      description: Retrieves a list of all active line items
      operationId: getLineItems
      parameters:
        - name: advertiser_id
          in: query
          description: Filter by advertiser ID
          required: false
          schema:
            type: string
        - name: placement
          in: query
          description: Filter by placement
          required: false
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineItem'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/lineitems/{id}:
    get:
      summary: Get line item by ID
      description: Retrieves a specific line item by its ID
      operationId: getLineItemById
      parameters:
        - name: id
          in: path
          description: ID of the line item
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineItem'
        404:
          description: Line item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/ads:
    get:
      summary: Get winning ads for a placement
      description: Returns the winning ads for a specific placement with optional filters (TO BE IMPLEMENTED BY CANDIDATE)
      operationId: getWinningAds
      parameters:
        - name: placement
          in: query
          description: Target placement identifier
          required: true
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: keyword
          in: query
          description: Filter by keyword
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of ads to return
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
            maximum: 10
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ad'
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/tracking:
    post:
      summary: Record ad interaction
      description: Records user interactions with ads (TO BE IMPLEMENTED BY CANDIDATE)
      operationId: trackAdInteraction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingEvent'
      responses:
        202:
          description: Tracking event accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    LineItemCreate:
      type: object
      required:
        - name
        - advertiser_id
        - bid
        - budget
        - placement
      properties:
        name:
          type: string
          description: Display name of the line item
          example: "Summer Sale Banner"
        advertiser_id:
          type: string
          description: ID of the advertiser
          example: "adv123"
        bid:
          type: number
          format: float
          description: Maximum bid amount (CPM)
          example: 2.5
        budget:
          type: number
          format: float
          description: Daily budget for the line item
          example: 1000.0
        placement:
          type: string
          description: Target placement identifier
          example: "homepage_top"
        categories:
          type: array
          description: List of associated categories
          items:
            type: string
          example: ["electronics", "sale"]
        keywords:
          type: array
          description: List of associated keywords
          items:
            type: string
          example: ["summer", "discount"]
    LineItem:
      allOf:
        - $ref: '#/components/schemas/LineItemCreate'
        - type: object
          required:
            - id
            - created_at
            - updated_at
          properties:
            id:
              type: string
              description: Unique identifier
              example: "li_1234567890"
            created_at:
              type: string
              format: date-time
              description: Creation timestamp
            updated_at:
              type: string
              format: date-time
              description: Last update timestamp
            status:
              type: string
              description: Current status of the line item
              enum: [active, paused, completed]
              default: active
    Ad:
      type: object
      required:
        - id
        - name
        - advertiser_id
        - bid
      properties:
        id:
          type: string
          description: Line item ID
          example: "li_1234567890"
        name:
          type: string
          description: Display name of the ad
          example: "Summer Sale Banner"
        advertiser_id:
          type: string
          description: ID of the advertiser
          example: "adv123"
        bid:
          type: number
          format: float
          description: Actual bid amount for this impression
          example: 2.3
        placement:
          type: string
          description: Placement where the ad will be shown
          example: "homepage_top"
        serve_url:
          type: string
          description: URL to serve for this ad
          example: "/api/v1/lineitems/li_1234567890"
    TrackingEvent:
      type: object
      required:
        - event_type
        - line_item_id
      properties:
        event_type:
          type: string
          description: Type of tracking event
          enum: [impression, click, conversion]
          example: "impression"
        line_item_id:
          type: string
          description: ID of the line item
          example: "li_1234567890"
        timestamp:
          type: string
          format: date-time
          description: Time when the event occurred
        placement:
          type: string
          description: Placement where the event occurred
          example: "homepage_top"
        user_id:
          type: string
          description: Anonymous user identifier
          example: "u_987654321"
        metadata:
          type: object
          description: Additional event metadata
          example:
            referrer: "https://example.com/products"
            device_type: "mobile"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: Error code
          example: 400
        message:
          type: string
          description: Error message
          example: "Invalid request parameters"
        details:
          type: object
          description: Additional error details
          example:
            field: "bid"
            reason: "must be a positive number"